<?xml version="1.0" encoding="UTF-8"?>
<matrix-project>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <combinationFilter>(["Devel:Cloud:4", "Devel:Cloud:5", "Devel:Cloud:5/SLE_12", "Devel:Cloud:6", "Devel:Cloud:6/SLE_12_SP1" ].contains(project) || subproject == ":")</combinationFilter>
  <axes>
    <hudson.matrix.TextAxis>
      <name>project</name>
      <values>
        <string>Devel:Cloud:4</string>
        <string>Devel:Cloud:5</string>
        <string>Devel:Cloud:5/SLE_12</string>
        <string>Devel:Cloud:6/SLE_12_SP1</string>
        <string>Devel:Cloud:Shared:11-SP3:Update</string>
        <string>SUSE:SLE-11-SP3:Update:Cloud5:Test</string>
        <string>SUSE:SLE-12-SP1:Update:Products:Cloud6/SLE_12_SP1</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.TextAxis>
      <name>subproject</name>
      <values>
        <string>:</string>
        <string>:Staging</string>
      </values>
    </hudson.matrix.TextAxis>
    <hudson.matrix.LabelAxis>
      <name>nodes</name>
      <values>
        <string>cloud-trackupstream-sle12</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <actions/>
  <description>&lt;!-- Managed by Jenkins Job Builder --&gt;</description>
  <keepDependencies>false</keepDependencies>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  <assignedNode>cloud-trackupstream</assignedNode>
  <canRoam>false</canRoam>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>24</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <triggers class="vector">
    <hudson.triggers.TimerTrigger>
      <spec>@hourly</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <builders>
    <hudson.tasks.Shell>
      <command># temporary, similar to update_automation (not that advanced)
d=/root/github.com/SUSE/cloud/
if [ ! -e  $d ] ; then
  mkdir -p /root/github.com/SUSE
  git clone git@github.com:SUSE/cloud.git $d
fi
pushd $d
git pull
popd
rm -rf cloud/
mkdir -p cloud
rsync -av $d/scripts ./cloud/

# Cleanup isos from old builds
rm -f scripts/release-mgmt/*Media1.iso

# options
export RPM_DEPCHECK=1
export SRCRPM_DEPCHECK=0

if [[ "$project" == "Devel:Cloud:Shared:11-SP3:Update" ]]; then
    export RPM_DEPCHECK_MEDIADEPS=" "
    export SRCRPM_DEPCHECK_MEDIADEPS=" "
    export INSTALLCHECK_EXTRA_OPTS="--exclude pattern:"
fi

OBS_PROJECT=$project
stage=$subproject
[[ $stage == ":" ]] &amp;&amp; stage=


if [ -n "$stage" ]; then
    if [ "${OBS_PROJECT##*\/}" != "${OBS_PROJECT}" ]; then
        OBS_PROJECT=${OBS_PROJECT%%\/*}$stage/${OBS_PROJECT##*\/}
    else
        OBS_PROJECT=${OBS_PROJECT%%\/*}$stage    
    fi
fi

OBS_TYPE=IBS OBS_PROJECT=$OBS_PROJECT make -C cloud/scripts/release-mgmt/ mediacheck
RETVAL=$?

# Cleanup
rm -r cloud/scripts/release-mgmt/*.iso
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</matrix-project>
